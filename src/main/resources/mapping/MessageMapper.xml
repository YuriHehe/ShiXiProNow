<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pro.ssm.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.pro.ssm.model.Message" >
    <id column="msg_id" property="msgId" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pro.ssm.model.MessageWithBLOBs" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="reply" property="reply" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    msg_id, sid, create_time, reply_time
  </sql>
  <sql id="Blob_Column_List" >
    content, reply
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pro.ssm.model.MessageWithBLOBs" >
    insert into message (msg_id, sid, create_time, 
      reply_time, content, reply
      )
    values (#{msgId,jdbcType=INTEGER}, #{sid,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{replyTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, #{reply,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pro.ssm.model.MessageWithBLOBs" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reply != null" >
        reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pro.ssm.model.MessageWithBLOBs" >
    update message
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pro.ssm.model.MessageWithBLOBs" >
    update message
    set sid = #{sid,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR},
      reply = #{reply,jdbcType=LONGVARCHAR}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pro.ssm.model.Message" >
    update message
    set sid = #{sid,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reply_time = #{replyTime,jdbcType=TIMESTAMP}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <select id="selectUnReply" resultType="com.pro.ssm.model.MessageWithBLOBs">
    select * from message where reply is null limit #{num}
  </select>
</mapper>